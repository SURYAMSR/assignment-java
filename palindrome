class palindrome12
{
	public static void main(String[] args) {
		int sum=0,temp,r; //int sum=0,temp,r
		int n=454;
		temp=n;
		while(n>0){


	r=n%10; //remainder is calculated if % sign is given int he program
	sum=(sum*10)+r;
	n=n/10; //quotient is calculated if  / sign is given in the program
	}
	if(temp==sum){
		System.out.println("it is a palindrome number");
	}
		else {
			System.out.println("it is not a palindrome number");
		}
	}
}

system.out.println("===bubblesort====");
class GFG 
{
    // An optimized version of Bubble Sort
    static void bubbleSort(int arr[], int n)
    {
        int i, j, temp;
        boolean swapped;
        for (i = 0; i < n - 1; i++) 
        {
            swapped = false;
            for (j = 0; j < n - i - 1; j++) 
            {
                if (arr[j] > arr[j + 1]) 
                {
                    // swap arr[j] and arr[j+1]
                    temp = arr[j];
                    arr[j] = arr[j + 1];
		     arr[j + 1] = temp;
                    swapped = true;
                }
            }

            // IF no two elements were 
            // swapped by inner loop, then break
            if (swapped == false)
                break;
        }
    }

    // Function to print an array 
    static void printArray(int arr[], int size)
    {
        int i;
	 for (i = 0; i < size; i++)
            System.out.print(arr[i] + " ");
        System.out.println();
    }

    // Driver program
    public static void main(String args[])
    {
        int arr[] = { 64, 34, 25, 12, 22, 11, 90 };
        int n = arr.length;
        bubbleSort(arr, n);
        System.out.println("Sorted array: ");
        printArray(arr, n);
    }
}
